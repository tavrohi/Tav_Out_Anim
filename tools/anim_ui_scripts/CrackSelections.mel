/*craSelections.melcraSelections is a small script that lets you create selections and recall them later (it does not use sets o quick select sets) so nothing remains ins the scene. It has the option of creating hudButtons in the viewport also. Once the selections are set you can use the shift and control modifiers while pressing any window buttonor hudButton to add to the current selection (shift key) or remove from current selection (control key).Version 1.1.0:Date: January 01, 0001- Added auto update buttons state. If you create some HUD buttons and close the UI, later on  when you reopen it, the selection buttons will reflect the currently used HUD buttons.Version 1.0.0:Date: January 01, 0001- First release.*/global proc craSelectionHUD( int $section, int $block){		string $sel[] = `ls -sl`;		if(size($sel)){				string $object;		string $objects[] = $sel;		string $labelName;				if(size($sel)>1)			$labelName = ((10-$block) + ". " + $sel[0] + "...");		else			$labelName = ((10-$block) + ". " + $sel[0]);				for($selNum in $sel)			$object += ($selNum +" ");				if(!`checkBox -q -exists cra_createHUDCB`){						hudButton			-bw 120			-bsh "roundRectangle"			-rc ("craStoreSelection(\"" + $object + "\"," + $block + ")")			-pc ("print\"\\n\";print \"//" + $object + "\"")			-section $section -block $block -blockSize "small"			-label $labelName			-labelFontSize "small"			-ba "left"			("HUDselBtn" + $block);					}		else if(`checkBox -q -exists cra_createHUDCB` && `checkBox -q -v cra_createHUDCB` ){						hudButton			-bw 120			-bsh "roundRectangle"			-rc ("craStoreSelection(\"" + $object + "\"," + $block + ")")			-pc ("print\"\\n\";print \"//" + $object + "\"")			-section $section -block $block -blockSize "small"			-label $labelName			-labelFontSize "small"			-ba "left"			("HUDselBtn" + $block);		} 							if(`window -exists cra_selectionsUIWin`){			button -e -l ("  " + $labelName) -vis 0 -ann $object -bgc .4 .6 1 -c ("craStoreSelection(\"" + $object + "\"," + $block + ")") ("storeSel" + (9-$block));			button -e -vis 1 ("storeSel" + (9-$block));		}	} else		error ("Nothing selected. Select object(s) to store selection " + (10-$block) + ".");	}global proc craStoreSelection( string $object, int $block ) {		string $tokenBuffer[];	int $numTokens = `tokenize $object $tokenBuffer`;	for ($i in $tokenBuffer)	if(!`objExists $i`) {		error "Missing object(s) from current selection.";		break;	}	if($numTokens) {		if(`getModifiers` == 1)			select -add $tokenBuffer;		if(`getModifiers` == 4)			select -deselect $tokenBuffer;		if(`getModifiers` == 0)			select -r $tokenBuffer;	}}global proc craDeleteHUD( int $selNum ){		if ($selNum == 0) {		for ($selNum=1; $selNum<11;$selNum++)			headsUpDisplay  -rem ("HUDselBtn" + (10-$selNum));				if(`window -exists cra_selectionsUIWin`){			for( $i=0; $i<9 ;$i++ ){				button -e -vis 0 -l ("    store selection " + ($i+1)) -bgc 0.94 0.94 0.94 -ann "Store selected objects" ("storeSel" + ($i));				button -e -vis 1 -c ("craSelectionHUD(5," + (9-$i) + ")") ("storeSel" + ($i));							}		}				warning "All HUDs deleted.";	} else {		headsUpDisplay  -rem ("HUDselBtn" + $selNum);		print "\n";		if(`window -exists cra_selectionsUIWin`){			button -e -vis 0 -l ("    store selection " + (10-$selNum)) -bgc 0.94 0.94 0.94 -ann "Store selected objects" ("storeSel" + (9-$selNum));			button -e -vis 1 -c ("craSelectionHUD(5," + ($selNum) + ")") ("storeSel" + (9-$selNum));		}	}}global proc craSelections(){		if (`window -exists cra_selectionsUIWin`)		deleteUI cra_selectionsUIWin;		window -t "  craSelections" -tlb 0 -mxb 0 -mnb 1 cra_selectionsUIWin;		frameLayout -l "User selections" -cl 0 -bv 1 -mh 5 -mw 5 -lv 1 -cll 1 -cc "window -e -wh 183 47 -s 0 cra_selectionsUIWin"-ec "window -e -wh 183 345 -s 0 cra_selectionsUIWin" -bs "etchedIn" cra_mainFL;	columnLayout "cra_mainCL1";		frameLayout -cl 1 -bv 1 -mh 5 -mw 5 -lv 0 -bs "etchedOut" cra_mainFL2;	columnLayout "cra_mainCL2";		frameLayout -cl 1 -bv 1 -mh 5 -mw 5 -lv 0 -bs "etchedIn" cra_mainFL3;	columnLayout "cra_mainCL";		rowColumnLayout -nc 2 -cw 1 110 -cw 2 25 "cra_mainRCL";		for($selNum=0;$selNum<9;$selNum++){				button -l ("    store selection " + ($selNum + 1)) -al "left" -ann "Store selected objects" -c ("craSelectionHUD(5," + (9-$selNum) + ")") ("storeSel" + $selNum);				iconTextButton		-al "center"		-h 15		-w 18		-ann "Remove Selection"		-style "iconOnly"		-image "fpe_brokenPaths.png"		-c ("craDeleteHUD(" + (9 - $selNum) +")")		("cra_delSel" + $selNum);					}	separator -h 10 -st "none";	setParent ..;	checkBox -label "Create HUD Buttons" cra_createHUDCB;		setParent ..;	setParent ..;	separator -h 5 -st "none";	frameLayout -cl 1 -bv 1 -mh 4 -mw 5 -lv 0 -w 150 -bs "etchedOut" cra_mainFL4;	columnLayout "cra_mainCL4";	button -l "reset all selections" -w 135 -h 20 -bgc .7 .7 .7 -c "craDeleteHUD(0)" cra_resetSelections;	window -e -wh 193 355 -s 0 cra_selectionsUIWin;	showWindow cra_selectionsUIWin;		for( $i=0; $i<10; $i++){		if(`headsUpDisplay -exists ("HUDselBtn" + (9-$i))`){			button -e -vis 0 -bgc .4 .6 1 -l ("  " + `hudButton -q -l ("HUDselBtn" + (9-$i))`) -c `hudButton -q -rc ("HUDselBtn" + (9-$i))` ("storeSel" +$i);			button -e -vis 1 ("storeSel" +$i);			hudButton -q -rc ("HUDselBtn" + (9-$i));		}	}	}